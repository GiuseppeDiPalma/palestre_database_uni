--CONTROLLARE SE UN CERTIFICATO MEDICO INSERITO ABBIA LA DATA SCADENZA TROPPO BREVE.
CREATE OR REPLACE TRIGGER T1
BEFORE INSERT ON CERTIFICATO_MEDICO
FOR EACH ROW
DECLARE
EX1 EXCEPTION;
BEGIN
IF :NEW.DATA_SCADENZA < (SYSDATE +30) THEN RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'IL CERTIFICATO MEDICO INSERITO NON è VALIDO POICHè SCADERà A BREVE.');
END;
/

--////////////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////////////////////////////////////////

--CONTROLLARE CHE IL PERSONAL TRAINER CHE HA FATTO LA SCHEDA
--ABBIA FATTO LA SCHEDA A UN CLIENTRE ISCRITTO NELLA PALESTRA PER LA QUALE LAVORA.
CREATE OR REPLACE TRIGGER T2
BEFORE INSERT ON SCHEDA 
FOR EACH ROW
DECLARE
EX1 EXCEPTION;
TMP CHAR(11);
TMP2 CHAR(11);
BEGIN 
SELECT P.PARTITA_IVA INTO TMP
FROM ((CLIENTE C JOIN E_ISCRITTO E ON C.CODICE_TESSERA=E.M_CODICE_TESSERA)
JOIN PALESTRA P ON P.PARTITA_IVA=E.M1_PARTITA_IVA)
WHERE C.CODICE_TESSERA = :NEW.M_CODICE_TESSERA;
SELECT T.M_PARTITA_IVA INTO TMP2
FROM (PALESTRA P JOIN PERSONAL_TRAINER T ON P.PARTITA_IVA=T.M_PARTITA_IVA)
WHERE T.ID_TESSERINO = :NEW.M_ID_TESSERINO;
IF TMP <> TMP2 THEN 
RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'IL PERSONAL TRAINER HA FATTO UNA SCHEDA PER UN CLIENTE DI UN ALTRA PALESTRA');
END;
/

--////////////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////////////////////////////////////////

--CONTROLLARE CHE IL CLIENTE FREQUENTI UN CORSO OFFERTO DALLA SUA PALESTRA
CREATE OR REPLACE TRIGGER T3
BEFORE INSERT ON FREQUENTA 
FOR EACH ROW
DECLARE
EX1 EXCEPTION;
TMP CHAR(11);
TMP2 CHAR(11);
BEGIN 
SELECT P.PARTITA_IVA INTO TMP
FROM ((CLIENTE C JOIN E_ISCRITTO E ON C.CODICE_TESSERA=E.M_CODICE_TESSERA)
JOIN PALESTRA P ON P.PARTITA_IVA=E.M1_PARTITA_IVA)
WHERE C.CODICE_TESSERA = :NEW.M_CODICE_TESSERA;
SELECT CO.M_PARTITA_IVA INTO TMP2
FROM (PALESTRA P JOIN CORSO CO ON P.PARTITA_IVA=CO.M_PARTITA_IVA)
WHERE CO.ID_CORSO = :NEW.M_ID_CORSO;
IF TMP <> TMP2 THEN 
RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'IL CLIENTE FREQUENTA UN CORSO OFFERTO NON DALLA SUA PALESTRA');
END;
/

--////////////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////////////////////////////////////////

--CONTROLLARE CHE LO STESSO GIORNO NON SI FACCIANO PIù CORSI DI QUANTE SIANO LE SALE DI UNA SEDE
CREATE OR REPLACE TRIGGER T4
BEFORE INSERT ON CORSO
FOR EACH ROW
DECLARE
EX1 EXCEPTION;
TMP INT;
TMP2 INT;
BEGIN 
SELECT NUMERO_SALE INTO TMP
FROM CORSO C JOIN SEDE S ON C.M_STRADA=S.STRADA AND C.M_CITTA=S.CITTA AND C.M_CAP=S.CAP
WHERE S.STRADA = :NEW.M_STRADA AND S.CITTA = :NEW.M_CITTA AND S.CAP = :NEW.M_CAP;
SELECT COUNT(*) INTO TMP2
FROM CORSO  
WHERE DATA_INIZIO = :NEW.DATA_INIZIO AND M_STRADA = :NEW.M_STRADA AND M_CITTA = :NEW.M_CITTA AND M_CAP = :NEW.M_CAP;
IF TMP <= TMP2 THEN 
RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'LA SEDE HA GIà TUTTE LE SALE OCCUPATE, NON SI POSSONO PIU FARE CORSI IN SEDE');
END;
/

--////////////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////////////////////////////////////////

-- CONTROLLARE CHE GLI ESERCIZI SIANO ABBIANATI AGLI ATTREZZI GIUSTI(DA COMPLETARE GLI ABBINAMENTI)
CREATE OR REPLACE TRIGGER T5
BEFORE INSERT ON SVOLTO_CON
FOR EACH ROW
DECLARE
EX1 EXCEPTION;
TMP INT;
TMP2 INT;
BEGIN 
SELECT ID_ESERCIZIO INTO TMP
FROM SVOLTO_CON S JOIN ESERCIZIO E ON S.M_ID_ESERCIZIO=E.ID_ESERCIZIO
WHERE E.ID_ESERCIZIO = :NEW.M_ID_ESERCIZIO;
SELECT ID_ATTREZZO INTO TMP2
FROM SVOLTO_CON S JOIN ATTREZZO A ON S.M_ID_ATTREZZO=A.ID_ATTREZZO
WHERE A.ID_ATTREZZO = :NEW.M_ID_ATTREZZO;
IF TMP=1 AND TMP2!=222221 THEN
RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'HAI ABBINATO UN MACCHINA SBAGLIATA PER L ESERCIZIO');
END;
/

--////////////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////////////////////////////////////////

--CONTROLLARE CHE IL PERSONAL TRAINER NON LAVORI PER PIù PALESTRE
CREATE OR REPLACE TRIGGER T6
BEFORE INSERT ON PERSONAL_TRAINER
FOR EACH ROW
DECLARE
CONTA NUMBER;
EX1 EXCEPTION;
BEGIN
SELECT COUNT(*) INTO CONTA FROM PERSONAL_TRAINER 
WHERE EXISTS ( SELECT M_PARTITA_IVA FROM PERSONAL_TRAINER);
IF CONTA > 0 THEN
RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'IL PERSONAL TRAINER LAVORA GIà PER UNA PALESTRA');
END;
/

--////////////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////////////////////////////////////////

--Controlla che il cliente frequenti il corso in una data compresa fra l'inizio e
-- la fine del corso 
CREATE OR REPLACE TRIGGER T7
BEFORE INSERT ON FREQUENTA
FOR EACH ROW
DECLARE
DATA_I DATE;
DATA_F DATE;
EX1 EXCEPTION;
BEGIN
SELECT DATA_INIZIO INTO DATA_I 
FROM ((CORSO JOIN FREQUENTA ON CORSO.ID_CORSO=FREQUENTA.M_ID_CORSO)
JOIN CLIENTE ON CLIENTE.CODICE_TESSERA=FREQUENTA.M_CODICE_TESSERA)
WHERE CLIENTE.CODICE_TESSERA = :NEW.M_CODICE_TESSERA;
SELECT DATA_FINE INTO DATA_F 
FROM ((CORSO JOIN FREQUENTA ON CORSO.ID_CORSO=FREQUENTA.M_ID_CORSO)
JOIN CLIENTE ON CLIENTE.CODICE_TESSERA=FREQUENTA.M_CODICE_TESSERA)
WHERE CLIENTE.CODICE_TESSERA = :NEW.M_CODICE_TESSERA;
IF :NEW.DATA_PRESENZA < DATA_I THEN RAISE EX1;
END IF;
IF :NEW.DATA_PRESENZA > DATA_F THEN RAISE EX1;
END IF;
EXCEPTION
WHEN EX1 THEN 
RAISE_APPLICATION_ERROR(-20001,'LA DATA PRESENZA NON è TRA I GIORNI DEL CORSO');
END;
/

